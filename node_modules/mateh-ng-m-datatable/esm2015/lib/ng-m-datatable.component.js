import { __decorate } from "tslib";
import { Component, ViewChild, Input, } from "@angular/core";
import { MatPaginator } from "@angular/material/paginator";
import { MatSort } from "@angular/material/sort";
import { MatTable } from "@angular/material/table";
import { DataTableDataSource } from "./ng-m-datatable.datasource";
import { FormGroup, FormBuilder } from "@angular/forms";
let NgMDatatable = class NgMDatatable {
    constructor(fb) {
        this.data = [];
        this.showSpinner = true;
        this.searchForm = fb.group({
            search: [""],
        });
        this.searchForm.valueChanges.subscribe((v) => {
            this.dataSource.data = this.filter(v.search);
            this.paginator._changePageSize(this.paginator.pageSize);
        });
    }
    ngOnInit() {
        this.dataSource = new DataTableDataSource(this.data || []);
    }
    asAction(c) {
        return c;
    }
    filter(searchName) {
        return searchName && searchName.trim()
            ? this.data.filter((x) => {
                for (const key in x) {
                    if (x[key].toString().toLowerCase().includes(searchName.toLowerCase()))
                        return x;
                }
            })
            : this.data;
    }
    ngAfterViewInit() {
        this.dataSource.data = this.data || [];
        this.dataSource.sort = this.sort;
        this.dataSource.paginator = this.paginator;
        this.table.dataSource = this.dataSource;
        this.tableBg = window.getComputedStyle(document.getElementById("klk")).background;
        this.tableColor = window.getComputedStyle(document.querySelector(".mat-header-cell")).color;
        document
            .querySelector(".table-container")
            .setAttribute("style", `background : ${this.tableBg}; color : ${this.tableColor}`);
        if (this.data.length > 0)
            this.toggleLoading(false);
    }
    toggleLoading(v) {
        this.showSpinner = v;
        const el = document.querySelector("#loading");
        if (el)
            el.setAttribute("style", `border-color : ${this.tableColor};`);
    }
    ngOnChanges(changes) {
        console.log("changes", changes);
        if (changes.data && !changes.data.firstChange) {
            this.dataSource.data = this.data || [];
            this.toggleLoading(false);
            this.paginator._changePageSize(this.paginator.pageSize);
        }
    }
};
NgMDatatable.ctorParameters = () => [
    { type: FormBuilder }
];
__decorate([
    ViewChild(MatPaginator, { static: false })
], NgMDatatable.prototype, "paginator", void 0);
__decorate([
    ViewChild(MatSort, { static: false })
], NgMDatatable.prototype, "sort", void 0);
__decorate([
    ViewChild(MatTable, { static: false })
], NgMDatatable.prototype, "table", void 0);
__decorate([
    Input()
], NgMDatatable.prototype, "options", void 0);
__decorate([
    Input()
], NgMDatatable.prototype, "data", void 0);
NgMDatatable = __decorate([
    Component({
        selector: "data-table",
        template: "<div class=\"table-container mat-elevation-z8\">\n  <div class=\"table-header\">\n    <div class=\"f-left\">\n      <h2>\n        <button\n          *ngIf=\"options?.addButton\"\n          (click)=\"options?.addButton.handler()\"\n          mat-icon-button\n          aria-label=\"Example icon-button with a heart icon\"\n        >\n          <mat-icon>{{ options?.addButton.icon }}</mat-icon>\n        </button>\n        {{ options?.title }}\n      </h2>\n    </div>\n    <form\n      class=\"mat-header-cell\"\n      [formGroup]=\"searchForm\"\n      class=\"\"\n      class=\"f-right\"\n    >\n      <mat-form-field class=\"example-full-width\">\n        <mat-icon matPrefix>search</mat-icon>\n        <mat-label>Search</mat-label>\n        <input formControlName=\"search\" matInput placeholder=\"...\" value=\"\" />\n      </mat-form-field>\n    </form>\n  </div>\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <ng-container *ngFor=\"let c of options?.columns\">\n      <ng-container [matColumnDef]=\"c.id\">\n        <th\n          [ngClass]=\"{ 't-right': c.type == 'action' }\"\n          mat-header-cell\n          *matHeaderCellDef\n          mat-sort-header\n        >\n          {{ c.text }}\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <ng-container *ngIf=\"c.type == 'text' || !c.type\">\n            {{ row[c.id] }}</ng-container\n          >\n          <ng-container *ngIf=\"c.type == 'action'\">\n            <button\n              class=\"f-right\"\n              mat-icon-button\n              [matMenuTriggerFor]=\"menu\"\n              aria-label=\"Example icon-button with a menu\"\n            >\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n              <button\n                *ngFor=\"let a of asAction(c).actions\"\n                [disabled]=\"a.disabled\"\n                (click)=\"a.handler(row)\"\n                data-toggle=\"modal\"\n                data-target=\"#add-serviceCats-modal\"\n                mat-menu-item\n              >\n                <mat-icon>{{ a.icon }}</mat-icon>\n                <span>{{ a.text }}</span>\n              </button>\n            </mat-menu>\n          </ng-container>\n        </td>\n      </ng-container>\n    </ng-container>\n\n    <tr\n      id=\"klk\"\n      mat-header-row\n      *matHeaderRowDef=\"options?.displayedColumns\"\n    ></tr>\n    <tr mat-row *matRowDef=\"let row; columns: options?.displayedColumns\"></tr>\n  </table>\n  <div *ngIf=\"dataSource.data.length < 1 && !showSpinner\" class=\"\">\n    <h3 style=\"text-align: center;\">\n      No elements\n    </h3>\n  </div>\n  <div\n    *ngIf=\"showSpinner\"\n    style=\"width: 100%;\"\n    class=\"d-flex justify-content-center\"\n  >\n    <div style=\"margin: 5px auto;\" class=\"lds-ripple\">\n      <div></div>\n      <div style=\"border-color: green;\"></div>\n    </div>\n  </div>\n\n  <mat-paginator\n    #paginator\n    [length]=\"dataSource?.data.length\"\n    [pageIndex]=\"0\"\n    [pageSize]=\"50\"\n    [pageSizeOptions]=\"[25, 50, 100, 250]\"\n  >\n  </mat-paginator>\n</div>\n",
        styles: ["*{box-sizing:border-box}.full-width-table{width:100%}.t-right{display:flex;padding:21px 0;justify-content:flex-end}.data-table{width:80%;margin:20px auto}.lds-ripple{position:relative;width:80px;height:80px}.lds-ripple div{position:absolute;border:4px solid #4b3d3d;opacity:1;border-radius:50%;-webkit-animation:1s cubic-bezier(0,.2,.8,1) infinite lds-ripple;animation:1s cubic-bezier(0,.2,.8,1) infinite lds-ripple}.lds-ripple div:nth-child(2){-webkit-animation-delay:-.5s;animation-delay:-.5s}@-webkit-keyframes lds-ripple{0%{top:36px;left:36px;width:0;height:0;opacity:1}100%{top:0;left:0;width:72px;height:72px;opacity:0}}@keyframes lds-ripple{0%{top:36px;left:36px;width:0;height:0;opacity:1}100%{top:0;left:0;width:72px;height:72px;opacity:0}}.table-container{padding:20px 5px;width:100%}.table-header{margin:0 40px}.f-right{float:right}.f-left{float:left}table{max-height:80vh}table.mat-table{border-spacing:0;width:100%;display:block;overflow-x:auto}.mat-table{width:100%;max-width:100%;display:table;border-collapse:collapse;margin:0}.mat-header-row,.mat-row{display:table-row}.mat-cell,.mat-header-cell{word-wrap:initial;display:table-cell;padding:0 5px;line-break:unset;width:100%;white-space:nowrap;overflow:hidden;vertical-align:middle}.mat-header-row{position:sticky;position:-webkit-sticky;top:0;z-index:1;background-color:inherit}"]
    })
], NgMDatatable);
export { NgMDatatable };
//# sourceMappingURL=data:application/json;base64,