{"version":3,"file":"mateh-ng-m-datatable.js","sources":["ng://mateh-ng-m-datatable/lib/ng-m-datatable.datasource.ts","ng://mateh-ng-m-datatable/lib/ng-m-datatable.component.ts","ng://mateh-ng-m-datatable/lib/ng-m-datatable.module.ts","ng://mateh-ng-m-datatable/public-api.ts","ng://mateh-ng-m-datatable/mateh-ng-m-datatable.ts"],"sourcesContent":["import { DataSource } from \"@angular/cdk/collections\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { map } from \"rxjs/operators\";\nimport { Observable, of as observableOf, merge } from \"rxjs\";\n\n// TODO: Replace this with your own data model type\n// export interface DataTableItem {\n//   name: string;\n//   id: number;\n// }\n\n/**\n * Data source for the DataTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DataTableDataSource<T> extends DataSource<T> {\n  data: Array<T>;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor(data: Array<T>) {\n    super();\n    this.data = data;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Array<T>> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange,\n    ];\n\n    return merge(...dataMutations).pipe(\n      map(() => {\n        return this.getPagedData(this.getSortedData([...this.data]));\n      })\n    );\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Array<T>) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Array<T>) {\n    if (!this.sort.active || this.sort.direction === \"\") {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === \"asc\";\n      switch (this.sort.active) {\n        case \"name\":\n          return compare(a[\"name\"], b[\"name\"], isAsc);\n        case \"id\":\n          return compare(+a[\"id\"], +b[\"id\"], isAsc);\n        default:\n          return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import {\n  AfterViewInit,\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  AfterViewChecked,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTable } from \"@angular/material/table\";\nimport { DataTableDataSource } from \"./ng-m-datatable.datasource\";\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\n\nexport interface NgMDatatableOptions<T> {\n  columns: Array<TextColumn | ActionColumn<T>>;\n  displayedColumns: String[];\n  title?: String;\n  addButton?: {\n    icon: string;\n    handler: () => void;\n  };\n}\n\nexport interface TextColumn {\n  id: string;\n  text: string;\n  type?: \"text\";\n}\n\nexport interface ActionColumn<T> {\n  id: string;\n  text: string;\n  type: \"action\";\n  actions: Array<{\n    text: string;\n    handler: (data: T) => void;\n    icon: string;\n    disabled?: string;\n  }>;\n}\n\n@Component({\n  selector: \"data-table\",\n  templateUrl: \"./ng-m-datatable.component.html\",\n  styleUrls: [\"./ng-m-datatable.component.css\"],\n})\nexport class NgMDatatable<T> implements OnInit, OnChanges, AfterViewInit {\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatTable, { static: false }) table: MatTable<T>;\n  tableHTML: ElementRef;\n\n  @Input() options: NgMDatatableOptions<T>;\n  @Input() data: Array<T> = [];\n\n  dataSource: DataTableDataSource<T>;\n  showSpinner = true;\n  tableColor: string;\n  tableBg: string;\n  searchForm: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.searchForm = fb.group({\n      search: [\"\"],\n    });\n\n    this.searchForm.valueChanges.subscribe((v) => {\n      this.dataSource.data = this.filter(v.search);\n      this.paginator._changePageSize(this.paginator.pageSize);\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource = new DataTableDataSource<T>(this.data || []);\n  }\n\n  asAction(c: TextColumn | ActionColumn<T>) {\n    return c as ActionColumn<T>;\n  }\n\n  filter(searchName: string): any {\n    return searchName && searchName.trim()\n      ? this.data.filter((x) => {\n          for (const key in x) {\n            if (\n              x[key].toString().toLowerCase().includes(searchName.toLowerCase())\n            )\n              return x;\n          }\n        })\n      : this.data;\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.data = this.data || [];\n\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n\n    this.tableBg = window.getComputedStyle(\n      document.getElementById(\"klk\")\n    ).background;\n    this.tableColor = window.getComputedStyle(\n      document.querySelector(\".mat-header-cell\")\n    ).color;\n    document\n      .querySelector(\".table-container\")\n      .setAttribute(\n        \"style\",\n        `background : ${this.tableBg}; color : ${this.tableColor}`\n      );\n\n    if (this.data.length > 0) this.toggleLoading(false);\n  }\n\n  toggleLoading(v: boolean) {\n    this.showSpinner = v;\n    const el = document.querySelector(\"#loading\");\n    if (el) el.setAttribute(\"style\", `border-color : ${this.tableColor};`);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    console.log(\"changes\", changes);\n    if (changes.data && !changes.data.firstChange) {\n      this.dataSource!.data = this.data || [];\n      this.toggleLoading(false);\n      this.paginator._changePageSize(this.paginator.pageSize);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { NgMDatatable } from \"./ng-m-datatable.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [NgMDatatable],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatInputModule,\n    MatSortModule,\n    MatFormFieldModule,\n  ],\n  exports: [NgMDatatable],\n})\nexport class NgMDatatableModule {}\n","/*\n * Public API Surface of ng-m-datatable\n */\n\nexport * from \"./lib/ng-m-datatable.component\";\nexport * from \"./lib/ng-m-datatable.datasource\";\nexport * from \"./lib/ng-m-datatable.module\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["observableOf"],"mappings":"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"}