(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/paginator'), require('@angular/material/sort'), require('@angular/material/table'), require('@angular/cdk/collections'), require('rxjs/operators'), require('rxjs'), require('@angular/forms'), require('@angular/common'), require('@angular/material/form-field'), require('@angular/material/input'), require('@angular/material/icon'), require('@angular/material/button'), require('@angular/material/menu')) :
    typeof define === 'function' && define.amd ? define('mateh-ng-m-datatable', ['exports', '@angular/core', '@angular/material/paginator', '@angular/material/sort', '@angular/material/table', '@angular/cdk/collections', 'rxjs/operators', 'rxjs', '@angular/forms', '@angular/common', '@angular/material/form-field', '@angular/material/input', '@angular/material/icon', '@angular/material/button', '@angular/material/menu'], factory) :
    (global = global || self, factory(global['mateh-ng-m-datatable'] = {}, global.ng.core, global.ng.material.paginator, global.ng.material.sort, global.ng.material.table, global.ng.cdk.collections, global.rxjs.operators, global.rxjs, global.ng.forms, global.ng.common, global.ng.material.formField, global.ng.material.input, global.ng.material.icon, global.ng.material.button, global.ng.material.menu));
}(this, (function (exports, core, paginator, sort, table, collections, operators, rxjs, forms, common, formField, input, icon, button, menu) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    // TODO: Replace this with your own data model type
    // export interface DataTableItem {
    //   name: string;
    //   id: number;
    // }
    /**
     * Data source for the DataTable view. This class should
     * encapsulate all logic for fetching and manipulating the displayed data
     * (including sorting, pagination, and filtering).
     */
    var DataTableDataSource = /** @class */ (function (_super) {
        __extends(DataTableDataSource, _super);
        function DataTableDataSource(data) {
            var _this = _super.call(this) || this;
            _this.data = data;
            return _this;
        }
        /**
         * Connect this data source to the table. The table will only update when
         * the returned stream emits new items.
         * @returns A stream of the items to be rendered.
         */
        DataTableDataSource.prototype.connect = function () {
            var _this = this;
            // Combine everything that affects the rendered data into one update
            // stream for the data-table to consume.
            var dataMutations = [
                rxjs.of(this.data),
                this.paginator.page,
                this.sort.sortChange,
            ];
            return rxjs.merge.apply(void 0, __spread(dataMutations)).pipe(operators.map(function () {
                return _this.getPagedData(_this.getSortedData(__spread(_this.data)));
            }));
        };
        /**
         *  Called when the table is being destroyed. Use this function, to clean up
         * any open connections or free any held resources that were set up during connect.
         */
        DataTableDataSource.prototype.disconnect = function () { };
        /**
         * Paginate the data (client-side). If you're using server-side pagination,
         * this would be replaced by requesting the appropriate data from the server.
         */
        DataTableDataSource.prototype.getPagedData = function (data) {
            var startIndex = this.paginator.pageIndex * this.paginator.pageSize;
            return data.splice(startIndex, this.paginator.pageSize);
        };
        /**
         * Sort the data (client-side). If you're using server-side sorting,
         * this would be replaced by requesting the appropriate data from the server.
         */
        DataTableDataSource.prototype.getSortedData = function (data) {
            var _this = this;
            if (!this.sort.active || this.sort.direction === "") {
                return data;
            }
            return data.sort(function (a, b) {
                var isAsc = _this.sort.direction === "asc";
                switch (_this.sort.active) {
                    case "name":
                        return compare(a["name"], b["name"], isAsc);
                    case "id":
                        return compare(+a["id"], +b["id"], isAsc);
                    default:
                        return 0;
                }
            });
        };
        return DataTableDataSource;
    }(collections.DataSource));
    /** Simple sort comparator for example ID/Name columns (for client-side sorting). */
    function compare(a, b, isAsc) {
        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);
    }

    var NgMDatatable = /** @class */ (function () {
        function NgMDatatable(fb) {
            var _this = this;
            this.data = [];
            this.showSpinner = true;
            this.searchForm = fb.group({
                search: [""],
            });
            this.searchForm.valueChanges.subscribe(function (v) {
                _this.dataSource.data = _this.filter(v.search);
                _this.paginator._changePageSize(_this.paginator.pageSize);
            });
        }
        NgMDatatable.prototype.ngOnInit = function () {
            this.dataSource = new DataTableDataSource(this.data || []);
        };
        NgMDatatable.prototype.asAction = function (c) {
            return c;
        };
        NgMDatatable.prototype.filter = function (searchName) {
            return searchName && searchName.trim()
                ? this.data.filter(function (x) {
                    for (var key in x) {
                        if (x[key].toString().toLowerCase().includes(searchName.toLowerCase()))
                            return x;
                    }
                })
                : this.data;
        };
        NgMDatatable.prototype.ngAfterViewInit = function () {
            this.dataSource.data = this.data || [];
            this.dataSource.sort = this.sort;
            this.dataSource.paginator = this.paginator;
            this.table.dataSource = this.dataSource;
            this.tableBg = window.getComputedStyle(document.getElementById("klk")).background;
            this.tableColor = window.getComputedStyle(document.querySelector(".mat-header-cell")).color;
            document
                .querySelector(".table-container")
                .setAttribute("style", "background : " + this.tableBg + "; color : " + this.tableColor);
            if (this.data.length > 0)
                this.toggleLoading(false);
        };
        NgMDatatable.prototype.toggleLoading = function (v) {
            this.showSpinner = v;
            var el = document.querySelector("#loading");
            if (el)
                el.setAttribute("style", "border-color : " + this.tableColor + ";");
        };
        NgMDatatable.prototype.ngOnChanges = function (changes) {
            console.log("changes", changes);
            if (changes.data && !changes.data.firstChange) {
                this.dataSource.data = this.data || [];
                this.toggleLoading(false);
                this.paginator._changePageSize(this.paginator.pageSize);
            }
        };
        NgMDatatable.ctorParameters = function () { return [
            { type: forms.FormBuilder }
        ]; };
        __decorate([
            core.ViewChild(paginator.MatPaginator, { static: false })
        ], NgMDatatable.prototype, "paginator", void 0);
        __decorate([
            core.ViewChild(sort.MatSort, { static: false })
        ], NgMDatatable.prototype, "sort", void 0);
        __decorate([
            core.ViewChild(table.MatTable, { static: false })
        ], NgMDatatable.prototype, "table", void 0);
        __decorate([
            core.Input()
        ], NgMDatatable.prototype, "options", void 0);
        __decorate([
            core.Input()
        ], NgMDatatable.prototype, "data", void 0);
        NgMDatatable = __decorate([
            core.Component({
                selector: "data-table",
                template: "<div class=\"table-container mat-elevation-z8\">\n  <div class=\"table-header\">\n    <div class=\"f-left\">\n      <h2>\n        <button\n          *ngIf=\"options?.addButton\"\n          (click)=\"options?.addButton.handler()\"\n          mat-icon-button\n          aria-label=\"Example icon-button with a heart icon\"\n        >\n          <mat-icon>{{ options?.addButton.icon }}</mat-icon>\n        </button>\n        {{ options?.title }}\n      </h2>\n    </div>\n    <form\n      class=\"mat-header-cell\"\n      [formGroup]=\"searchForm\"\n      class=\"\"\n      class=\"f-right\"\n    >\n      <mat-form-field class=\"example-full-width\">\n        <mat-icon matPrefix>search</mat-icon>\n        <mat-label>Search</mat-label>\n        <input formControlName=\"search\" matInput placeholder=\"...\" value=\"\" />\n      </mat-form-field>\n    </form>\n  </div>\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <ng-container *ngFor=\"let c of options?.columns\">\n      <ng-container [matColumnDef]=\"c.id\">\n        <th\n          [ngClass]=\"{ 't-right': c.type == 'action' }\"\n          mat-header-cell\n          *matHeaderCellDef\n          mat-sort-header\n        >\n          {{ c.text }}\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <ng-container *ngIf=\"c.type == 'text' || !c.type\">\n            {{ row[c.id] }}</ng-container\n          >\n          <ng-container *ngIf=\"c.type == 'action'\">\n            <button\n              class=\"f-right\"\n              mat-icon-button\n              [matMenuTriggerFor]=\"menu\"\n              aria-label=\"Example icon-button with a menu\"\n            >\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n              <button\n                *ngFor=\"let a of asAction(c).actions\"\n                [disabled]=\"a.disabled\"\n                (click)=\"a.handler(row)\"\n                data-toggle=\"modal\"\n                data-target=\"#add-serviceCats-modal\"\n                mat-menu-item\n              >\n                <mat-icon>{{ a.icon }}</mat-icon>\n                <span>{{ a.text }}</span>\n              </button>\n            </mat-menu>\n          </ng-container>\n        </td>\n      </ng-container>\n    </ng-container>\n\n    <tr\n      id=\"klk\"\n      mat-header-row\n      *matHeaderRowDef=\"options?.displayedColumns\"\n    ></tr>\n    <tr mat-row *matRowDef=\"let row; columns: options?.displayedColumns\"></tr>\n  </table>\n  <div *ngIf=\"dataSource.data.length < 1 && !showSpinner\" class=\"\">\n    <h3 style=\"text-align: center;\">\n      No elements\n    </h3>\n  </div>\n  <div\n    *ngIf=\"showSpinner\"\n    style=\"width: 100%;\"\n    class=\"d-flex justify-content-center\"\n  >\n    <div style=\"margin: 5px auto;\" class=\"lds-ripple\">\n      <div></div>\n      <div style=\"border-color: green;\"></div>\n    </div>\n  </div>\n\n  <mat-paginator\n    #paginator\n    [length]=\"dataSource?.data.length\"\n    [pageIndex]=\"0\"\n    [pageSize]=\"50\"\n    [pageSizeOptions]=\"[25, 50, 100, 250]\"\n  >\n  </mat-paginator>\n</div>\n",
                styles: ["*{box-sizing:border-box}.full-width-table{width:100%}.t-right{display:flex;padding:21px 0;justify-content:flex-end}.data-table{width:80%;margin:20px auto}.lds-ripple{position:relative;width:80px;height:80px}.lds-ripple div{position:absolute;border:4px solid #4b3d3d;opacity:1;border-radius:50%;-webkit-animation:1s cubic-bezier(0,.2,.8,1) infinite lds-ripple;animation:1s cubic-bezier(0,.2,.8,1) infinite lds-ripple}.lds-ripple div:nth-child(2){-webkit-animation-delay:-.5s;animation-delay:-.5s}@-webkit-keyframes lds-ripple{0%{top:36px;left:36px;width:0;height:0;opacity:1}100%{top:0;left:0;width:72px;height:72px;opacity:0}}@keyframes lds-ripple{0%{top:36px;left:36px;width:0;height:0;opacity:1}100%{top:0;left:0;width:72px;height:72px;opacity:0}}.table-container{padding:20px 5px;width:100%}.table-header{margin:0 40px}.f-right{float:right}.f-left{float:left}table{max-height:80vh}table.mat-table{border-spacing:0;width:100%;display:block;overflow-x:auto}.mat-table{width:100%;max-width:100%;display:table;border-collapse:collapse;margin:0}.mat-header-row,.mat-row{display:table-row}.mat-cell,.mat-header-cell{word-wrap:initial;display:table-cell;padding:0 5px;line-break:unset;width:100%;white-space:nowrap;overflow:hidden;vertical-align:middle}.mat-header-row{position:sticky;position:-webkit-sticky;top:0;z-index:1;background-color:inherit}"]
            })
        ], NgMDatatable);
        return NgMDatatable;
    }());

    var NgMDatatableModule = /** @class */ (function () {
        function NgMDatatableModule() {
        }
        NgMDatatableModule = __decorate([
            core.NgModule({
                declarations: [NgMDatatable],
                imports: [
                    common.CommonModule,
                    table.MatTableModule,
                    forms.ReactiveFormsModule,
                    menu.MatMenuModule,
                    button.MatButtonModule,
                    paginator.MatPaginatorModule,
                    icon.MatIconModule,
                    input.MatInputModule,
                    sort.MatSortModule,
                    formField.MatFormFieldModule,
                ],
                exports: [NgMDatatable],
            })
        ], NgMDatatableModule);
        return NgMDatatableModule;
    }());

    exports.DataTableDataSource = DataTableDataSource;
    exports.NgMDatatable = NgMDatatable;
    exports.NgMDatatableModule = NgMDatatableModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=mateh-ng-m-datatable.umd.js.map
